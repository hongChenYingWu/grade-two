#include<stdio.h>
#include<stdlib.h>
int toNumBoxes(int numGoods[]) {
	int numBoxes=0,maxTwo=0,maxOne=0;
	numBoxes += numGoods[3] + numGoods[4] + numGoods[5];
	//4*4,5*5和6*6的货物都需要占用单独的一个箱子
	maxTwo += numGoods[3] * 5;
	maxOne += numGoods[4] * 11;
	int t = numGoods[2] % 4;   
	if (t == 1) { numBoxes += (numGoods[2] / 4 + 1); maxTwo += 5; maxOne += 7; }
	else if (t == 2) { numBoxes += (numGoods[2] / 4 + 1); maxTwo += 3; maxOne += 6; }
	else if (t == 3) { numBoxes += (numGoods[2] / 4 + 1); maxTwo += 1; maxOne += 5; }
	else numBoxes += numGoods[2] / 4;//分情况讨论2*2,1*1的货物的最大个数
	if (numGoods[1] <= maxTwo) {
		maxOne += (maxTwo - numGoods[1]) * 4;
		if (numGoods[0] > maxOne)  numBoxes += ((numGoods[0] - maxOne - 1) / 36 + 1);
	}                         //这样写减少了分类讨论
	else {   //在货物2*2超出箱子容纳，为其分配其他箱子时，继续讨论货物1*1是否超出箱子容纳
		numBoxes += ((numGoods[1] - maxTwo - 1) / 9 + 1);
		maxOne += (36 - 4 * ((numGoods[1] - maxTwo)%9));
		if (numGoods[0] > maxOne)  numBoxes += ((numGoods[0] - maxOne - 1) / 36 + 1);
	}
	return numBoxes;
}
int main() {
	while (1) {
		int numGoods[6];
		for (int i = 0; i < 6; i++) scanf_s("%d", &numGoods[i]);
		if (numGoods[0]==0&& numGoods[1] == 0&&numGoods[2] == 0&&numGoods[3] == 0
		&&numGoods[4] == 0&&numGoods[5] == 0)  break;
		//本题为多组输入，当输入都为0时跳出循环
		printf_s("%d\n", toNumBoxes(numGoods)); 
	}	
	return 0;
}
